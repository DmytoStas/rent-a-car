{"version":3,"file":"static/js/850.166578d4.chunk.js","mappings":"uNAKA,MAcA,EAdqBA,IAAmB,IAAlB,SAAEC,GAAUD,EAChC,OACEE,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,EAAM,aAAaC,SAC/BJ,EAASK,KAAIC,IAEVL,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,EAAM,kBAAkBC,UACrCH,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,KAAMF,KAD+BA,EAAIG,OAKlD,E,wBCJT,MAmDA,EAnDiBC,KACf,MAAMC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,IACxCC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,IAC5BG,EAAYC,IAAiBJ,EAAAA,EAAAA,UAAS,IACtCK,EAAMC,IAAWN,EAAAA,EAAAA,UAAS,KAEjCO,EAAAA,EAAAA,YAAU,KACR,IAAKZ,EACH,OAGFO,EAAS,IAET,MAAMM,GAAgBC,EAAAA,EAAAA,GAAa,CACjCC,IAAKf,EACLM,QACAH,gBAEFQ,EAAQE,GACRJ,EAAcO,KAAKC,KAAKjB,EAAUkB,OAASZ,GAAO,GACjD,CAACN,EAAWG,EAAaG,KAE5BM,EAAAA,EAAAA,YAAU,MACRO,EAAAA,EAAAA,GAAa,CAAEJ,IAAKL,EAAMJ,SAAQ,GACjC,CAACI,EAAMJ,IAMV,OACEc,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA5B,SAAA,CACmB,IAAhBiB,EAAKQ,QACJ5B,EAAAA,EAAAA,KAACgC,EAAY,CAACjC,SAAUqB,KAExBpB,EAAAA,EAAAA,KAACiC,EAAAA,EAAkB,CAACC,WAAY,uCAGjCrB,EAAcK,IACblB,EAAAA,EAAAA,KAACmC,EAAAA,EAAO,CACNlC,UAAWmC,EAAAA,EAAI,YACfC,eAfeC,KACrBxB,GAAeyB,GAAYA,EAAW,GAAE,EAelCC,SAAS,YACTC,OAAQL,EAAAA,EAAI,gBAGf,C","sources":["components/FavoriteList/FavoriteList.jsx","pages/Favorite/Favorite.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport Card from 'components/Card';\n\nimport utils from 'css/utils.module.css';\n\nconst FavoriteList = ({ favCards }) => {\n  return (\n    <ul className={utils['card-list']}>\n      {favCards.map(fav => {\n        return (\n          <li className={utils['card-list-item']} key={fav.id}>\n            <Card data={fav} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default FavoriteList;\n\nFavoriteList.propTypes = {\n  favCards: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      img: PropTypes.string,\n      make: PropTypes.string.isRequired,\n      model: PropTypes.string.isRequired,\n      year: PropTypes.number.isRequired,\n      type: PropTypes.string.isRequired,\n      rentalPrice: PropTypes.string.isRequired,\n      address: PropTypes.string.isRequired,\n      rentalCompany: PropTypes.string.isRequired,\n      mileage: PropTypes.number.isRequired,\n      accessories: PropTypes.array.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selectFavorite } from 'redux/selectors';\nimport { paginateCars, scrollSmooth } from 'utils';\nimport FavoriteList from 'components/FavoriteList';\nimport MainBtn from 'components/MainBtn';\nimport NoContentComponent from 'components/NoContentComponent';\n\nimport css from 'css/utils.module.css';\n\nconst Favotite = () => {\n  const favorites = useSelector(selectFavorite);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [limit, setLimit] = useState(9);\n  const [totalPages, setTotalPages] = useState(0);\n  const [cars, setCars] = useState([]);\n\n  useEffect(() => {\n    if (!favorites) {\n      return;\n    }\n\n    setLimit(12);\n\n    const paginatedCars = paginateCars({\n      arr: favorites,\n      limit,\n      currentPage,\n    });\n    setCars(paginatedCars);\n    setTotalPages(Math.ceil(favorites.length / limit));\n  }, [favorites, currentPage, limit]);\n\n  useEffect(() => {\n    scrollSmooth({ arr: cars, limit });\n  }, [cars, limit]);\n\n  const handleLoadMore = () => {\n    setCurrentPage(prevPage => prevPage + 1);\n  };\n\n  return (\n    <>\n      {cars.length !== 0 ? (\n        <FavoriteList favCards={cars} />\n      ) : (\n        <NoContentComponent noContMess={'Sorry, your favorite list is empty'} />\n      )}\n\n      {currentPage < totalPages && (\n        <MainBtn\n          className={css['load-btn']}\n          onMainBtnClick={handleLoadMore}\n          btnTitle=\"Load More\"\n          styles={css['load-btn']}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Favotite;\n"],"names":["_ref","favCards","_jsx","className","utils","children","map","fav","Card","data","id","Favotite","favorites","useSelector","selectFavorite","currentPage","setCurrentPage","useState","limit","setLimit","totalPages","setTotalPages","cars","setCars","useEffect","paginatedCars","paginateCars","arr","Math","ceil","length","scrollSmooth","_jsxs","_Fragment","FavoriteList","NoContentComponent","noContMess","MainBtn","css","onMainBtnClick","handleLoadMore","prevPage","btnTitle","styles"],"sourceRoot":""}